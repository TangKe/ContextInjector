apply plugin: 'java-library'
apply plugin: 'maven-publish'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'ContextInjectorCompiler'

    publishedGroupId = 'ke.tang'
    libraryName = 'ContextInjectorCompiler'
    artifact = 'context-injector-compiler'

    libraryDescription = 'Inject android application context any where'

    siteUrl = 'https://github.com/TangKe/ContextInjector'
    gitUrl = 'https://github.com/TangKe/ContextInjector.git'

    libraryVersion = versions.versionName

    developerId = 'tangke'
    developerName = 'Tang Ke'
    developerEmail = 'tang.ke@me.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

tasks.javadoc {
    configurations.implementation.setCanBeResolved(true)
    classpath += configurations.implementation
    options.encoding "UTF-8"
    options.charSet 'UTF-8'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "ke.tang:context-injector-annotations:${versions.versionName}"
    annotationProcessor "com.google.auto.service:auto-service:${versions.library.auto}"
    implementation "com.google.auto.service:auto-service-annotations:${versions.library.auto}"
    implementation "com.squareup:javapoet:${versions.library.javaPoet}"
    implementation "org.jetbrains.kotlinx:kotlinx-metadata-jvm:${versions.library.kotlinMetadata}"
}

sourceCompatibility = "1.7"
targetCompatibility = "1.7"

afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {
                groupId = 'ke.tang'
                artifactId = 'context-injector-compiler'
                version = versions.versionName
                from components.java
            }
        }
    }
}